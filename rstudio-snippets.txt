snippet lib
	library(${1:package})

snippet req
	require(${1:package})

snippet src
	source("${1:file.R}")

snippet ret
	return(${1:code})

snippet mat
	matrix(${1:data}, nrow = ${2:rows}, ncol = ${3:cols})

snippet sg
	setGeneric("${1:generic}", function(${2:x, ...}) {
		standardGeneric("${1:generic}")
	})

snippet sm
	setMethod("${1:generic}", ${2:class}, function(${2:x, ...}) {
		${0}
	})

snippet sc
	setClass("${1:Class}", slots = c(${2:name = "type"}))

snippet if
	if (${1:condition}) {
		${0}
	}

snippet el
	else {
		${0}
	}

snippet ei
	else if (${1:condition}) {
		${0}
	}

snippet fun
	${1:name} <- function(${2:variables}) {
		${0}
	}

snippet for
	for (${1:variable} in ${2:vector}) {
		${0}
	}

snippet while
	while (${1:condition}) {
		${0}
	}

snippet switch
	switch (${1:object},
		${2:case} = ${3:action}
	)

snippet apply
	apply(${1:array}, ${2:margin}, ${3:...})

snippet lapply
	lapply(${1:list}, ${2:function})

snippet sapply
	sapply(${1:list}, ${2:function})

snippet mapply
	mapply(${1:function}, ${2:...})

snippet tapply
	tapply(${1:vector}, ${2:index}, ${3:function})

snippet vapply
	vapply(${1:list}, ${2:function}, FUN.VALUE = ${3:type}, ${4:...})

snippet rapply
	rapply(${1:list}, ${2:function})

snippet ts
	`r paste("#", date(), "------------------------------\n")`

snippet shinyapp
	library(shiny)
	
	ui <- fluidPage(
	  ${0}
	)
	
	server <- function(input, output, session) {
	  
	}
	
	shinyApp(ui, server)

snippet shinymod
	${1:name}UI <- function(id) {
	  ns <- NS(id)
	  tagList(
		${0}
	  )
	}
	
	${1:name}Server <- function(id) {
	  moduleServer(
	    id,
	    function(input, output, session) {
	      
	    }
	  )
	}

snippet SH
	ʃ
snippet ZH
	ʒ
snippet O
	ɔ
snippet E
	ɛ
snippet schwa
	ə
snippet schwar
	ɚ
snippet Er
	ɝ
snippet I
	ɪ
snippet U
	ʊ
snippet N
	ŋ
snippet nh
	ɲ
snippet L
	ʎ
snippet T
	θ
snippet D
	ð
snippet R
	ʁ
snippet r
	ɾ
snippet ps
	ˈ
snippet ss
	ˌ
snippet ?
	ʔ
snippet ae
	æ
snippet 2
	ʌ
snippet A
	ɑ
snippet rh
	ɹ
snippet bayes
	library(brms)
	library(bayesplot)
	library(tidybayes)
	library(bayestestR)

snippet packages
	library(tidyverse)
	library(scales)
	library(Hmisc)
	library(lme4)
	library(arm)
	
snippet prop
	${1:data} |> 
		summarize(n = n(), .by = c(${2:var_1}, ${3:var_2}, ${4:var_3})) |> 
		mutate(prop = n / sum(n), .by = c(${2:var_1}, ${3:var_2}))
		
snippet counts
	${1:data} |>
		dplyr::summarize(n = n_distinct(${2:group_var}), .by = c(${3:var}))
		
snippet long
	long = ${1:data} |>
		pivot_longer(names_to = ${2:names_var},
								 values_to = ${3:values_var},
								 cols = ${4:col}:${5:col})

snippet toFactor
	mutate(across(where(is_character), as_factor))
	
snippet colors
	 <span style="color:{colours["X"]}">**X**</span> 
	
snippet PSL
	load("/Users/gdgarcia/Dropbox/Website/quarto_website/PSL/psl.RData")